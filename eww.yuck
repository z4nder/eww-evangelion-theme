;; Variables
(deflisten workspace "scripts/workspace")



(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ”Š"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")
    (metric :label "ï¡š"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "ðŸ’¾"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))
    
(defwidget workspaces []
      (literal :content workspace))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

; (defwidget left []
;   (box 
;     :orientation "h" 
;     :space-evenly false  
;     :halign "end"
;     :class "left_modules"
;     (workspaces)
;   )
; )
    
; (defwidget right []
;   (box 
;     :orientation "h" 
;     :space-evenly false  
;     :halign "start"
;     :class "right_modules"
;     (workspaces)
;   )
; )
    
; (defwidget center []
;   (box 
;     :orientation "h" 
;     :space-evenly false  
;     :halign "center"
;     :class "center_modules"
;     (music)
;   )
; )

(defwidget bar []
  (centerbox 
    :class "bar_class"
    :orientation "h"
    (workspaces)
    (music)
    (sidestuff)
  )
)

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry 
    :x "0%"
    :y "0%"
    :width "100%"
    :height "30px"
    :anchor "top center"
  )
  :stacking "fg"
(bar))